name: üèÅ Windows Builds
on:
  workflow_call:

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes d3d12=yes
  SCONS_CACHE_MSVC_CONFIG: true

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-windows
  cancel-in-progress: true

jobs:
  build-windows:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor, tests=yes)
            cache-name: windows-editor
            target: editor
            tests: true
            # Skip debug symbols, they're way too big with MSVC.
            sconsflags: debug_symbols=no vsproj=yes vsproj_gen_only=no windows_subsystem=console
            bin: "./bin/godot.windows.editor.x86_64.exe"
            compiler: msvc

          - name: Editor with GCC compilation (target=editor, tests=yes, use_mingw=yes)
            cache-name: windows-editor-gcc
            target: editor
            tests: true
            sconsflags: debug_symbols=no windows_subsystem=console use_mingw=yes
            bin: "./bin/godot.windows.editor.x86_64.exe"
            compiler: gcc

          - name: Editor with clang compilation (target=editor, tests=yes, use_mingw=yes, use_llvm=yes)
            cache-name: windows-editor-clang
            target: editor
            tests: true
            sconsflags: debug_symbols=no windows_subsystem=console use_mingw=yes use_llvm=yes
            bin: "./bin/godot.windows.editor.x86_64.llvm.exe"
            compiler: clang

          - name: Template (target=template_release)
            cache-name: windows-template
            target: template_release
            tests: false
            sconsflags: debug_symbols=no
            compiler: msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Download Direct3D 12 SDK components
        run: python ./misc/scripts/install_d3d12_sdk_windows.py

      - name: Setup MSVC problem matcher
        if: ${{ matrix.compiler == 'msvc' }}
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Setup GCC problem matcher
        if: ${{ matrix.compiler != 'msvc' }}
        uses: ammaraskar/gcc-problem-matcher@master

      # "windows-latest" mingw lacks clang & will try to use the MSVC builtin instead.
      # Circumvent by using WinLibs, which prepends its bin folder to `$PATH`.
      - name: Setup WinLibs
        if: ${{ matrix.compiler == 'clang' }}
        uses: bwoodsend/setup-winlibs-action@v1
        with:
          with_clang: true

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: windows
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}

      - name: Prepare artifact
        if: ${{ matrix.compiler == 'msvc' }}
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        if: ${{ matrix.compiler == 'msvc' }}
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}

      # Execute unit tests for the editor
      - name: Unit tests
        if: ${{ matrix.tests }}
        run: |
          ${{ matrix.bin }} --version
          ${{ matrix.bin }} --help
          ${{ matrix.bin }} --test --force-colors
